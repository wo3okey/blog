{"version":3,"file":"component---src-templates-series-jsx-2ef4e9029720c533f666.js","mappings":"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","sources":["webpack://gatsby-starter-hoodie/./src/components/Icon/index.jsx","webpack://gatsby-starter-hoodie/./src/components/PostList/index.jsx","webpack://gatsby-starter-hoodie/./src/components/TagList/index.jsx","webpack://gatsby-starter-hoodie/./src/templates/Series.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport _ from \"lodash\"\n\nimport { Link } from \"gatsby\"\n\nconst IconImageWrapper = styled.img`\n  width: 15px\n`\n\nconst SeriesWrapper = styled.div`\n  margin-bottom: 32px;\n  padding: 16px;\n  background-color: ${props => props.theme.colors.seriesBackground};\n`\n\nconst SeriesHeader = styled.span`\n  padding-left: 7px;\n  font-size: 18px;\n  color: ${props => props.theme.colors.text};\n\n  & > span {\n    font-weight: normal;\n    color: ${props => props.theme.colors.tertiaryText};\n  }\n\n  & > a {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  & > a:hover {\n    text-decoration: underline;\n  }\n`\n\nconst CategoryIcon = ({category}) => {\n  return (\n    <>\n    <IconImageWrapper src={`/icons/${category}.png`}></IconImageWrapper> \n    <SeriesHeader>\n      <Link to={`/series/${_.replace(category, /\\s/g, \"-\")}`}>{category}</Link>\n    </SeriesHeader>\n    </>\n  )\n}\nexport default CategoryIcon\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport _ from \"lodash\"\n\nimport { Link } from \"gatsby\"\n\nimport Title from \"components/Title\"\nimport Divider from \"components/Divider\"\nimport TagList from \"components/TagList\"\nimport CategoryIcon from \"components/Icon\"\n\nconst PostListWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 10px;\n  }\n`\n\nconst PostWrapper = styled.div`\n  position: relative;\n  top: 0;\n  transition: all 0.5s;\n\n  @media (max-width: 768px) {\n    padding: 0 5px;\n  }\n`\n\nconst Date = styled.p`\n  margin-bottom: 16px;\n  font-size: 14.4px;\n  color: ${props => props.theme.colors.tertiaryText};\n`\n\nconst Excerpt = styled.p`\n  margin-bottom: 32px;\n  line-height: 1.7;\n  font-size: 16px;\n  color: ${props => props.theme.colors.secondaryText};\n  word-break: break-all;\n`\n\nconst checkIsScrollAtBottom = () => {\n  return (\n    document.documentElement.scrollHeight -\n      document.documentElement.scrollTop <=\n    document.documentElement.clientHeight + 100\n  )\n}\n\nconst PostList = ({ postList }) => {\n  const [postCount, setPostCount] = useState(10)\n\n  const handleMoreLoad = _.throttle(() => {\n    if (checkIsScrollAtBottom() && postCount < postList.length) {\n      setTimeout(() => setPostCount(postCount + 10), 300)\n    }\n  }, 250)\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleMoreLoad)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleMoreLoad)\n    }\n  }, [postCount, postList])\n\n  useEffect(() => {\n    setPostCount(10)\n  }, [postList])\n\n  return (\n    <PostListWrapper>\n      {postList.slice(0, postCount).map((post, i) => {\n        const { title, description, date, tags, series } = post.frontmatter\n        const { excerpt } = post\n        const { slug } = post.fields\n\n        return (\n          <>\n            <PostWrapper>\n            <CategoryIcon category={series}></CategoryIcon>\n              <Title size=\"bg\">\n              <Link to={slug}>{title}</Link>\n              </Title>\n              <Date>{date}</Date>\n              {description ? (\n                <Excerpt>{description}</Excerpt>\n              ) : (\n                <Excerpt>{excerpt}</Excerpt>\n              )}\n              <TagList tagList={tags} />\n            </PostWrapper>\n\n            {postCount - 1 !== i && postList.length - 1 !== i && (\n              <Divider mt=\"48px\" mb=\"32px\" />\n            )}\n          </>\n        )\n      })}\n    </PostListWrapper>\n  )\n}\n\nexport default PostList\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst TagListWrapper = styled.div`\n  margin-bottom: 16px;\n  word-break: break-all;\n`\n\nconst TagLink = styled.div`\n  display: inline-block;\n  padding: 9.6px 11.2px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 50px;\n  background-color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagBackground\n      : props.theme.colors.tagBackground};\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagText\n      : props.theme.colors.tagText};\n  text-decoration: none;\n  font-size: 14.4px;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${props =>\n      props.selected\n        ? props.theme.colors.hoveredSelectedTagBackground\n        : props.theme.colors.hoveredTagBackground};\n  }\n`\n\nconst spaceToDash = text => {\n  return text.replace(/\\s+/g, \"-\")\n}\n\nconst TagList = ({ tagList, count, selected }) => {\n  if (!tagList) return null\n\n  if (!count) {\n    return (\n      <TagListWrapper>\n        {tagList.map((tag, i) => (\n          <Link key={JSON.stringify({ tag, i })} to={`/tags?q=${tag}`}>\n            <TagLink>{spaceToDash(tag)}</TagLink>\n          </Link>\n        ))}\n      </TagListWrapper>\n    )\n  }\n\n  return (\n    <TagListWrapper>\n      {tagList.map((tag, i) => (\n        <Link\n          key={JSON.stringify({ tag, i })}\n          to={\n            selected === tag.fieldValue ? \"/tags\" : `/tags?q=${tag.fieldValue}`\n          }\n        >\n          <TagLink selected={tag.fieldValue === selected}>\n            {spaceToDash(tag.fieldValue)} ({tag.totalCount})\n          </TagLink>\n        </Link>\n      ))}\n    </TagListWrapper>\n  )\n}\n\nexport default TagList\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport styled from \"styled-components\"\n\nimport Layout from \"components/Layout\"\nimport SEO from \"components/SEO\"\nimport PostList from \"components/PostList\"\nimport Divider from \"components/Divider\"\n\nimport { description, siteUrl } from \"../../blog-config\"\n\nconst Header = styled.div`\n  @media (max-width: 768px) {\n    padding: 0px 15px;\n  }\n`\n\nconst Title = styled.h1`\n  margin-bottom: 15px;\n  line-height: 1.2;\n  font-size: 44.8px;\n  font-weight: bold;\n  color: ${props => props.theme.colors.text};\n  word-break: break-all;\n`\n\nconst Subtitle = styled.h3`\n  display: inline-block;\n  padding: 2px 3px;\n  margin-top: 32px;\n  margin-bottom: 8px;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${props => props.theme.colors.text};\n  color: ${props => props.theme.colors.bodyBackground};\n  letter-spacing: -1px;\n`\n\nconst SeriesInform = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  color: ${props => props.theme.colors.text};\n\n  & > span {\n    margin: 0 3px;\n  }\n`\n\nconst Date = styled.span`\n  color: ${props => props.theme.colors.tertiaryText};\n  font-weight: lighter;\n`\n\nconst Series = ({ pageContext, data }) => {\n  const seriesName = pageContext.series\n  const posts = data.posts.nodes\n\n  return (\n    <Layout>\n      <SEO\n        title={`SERIES: ${seriesName}`}\n        description={description}\n        url={siteUrl}\n      />\n\n      <Header>\n        <Title> {seriesName} </Title>\n\n        <SeriesInform>\n          <span>{posts.length} Posts</span>\n          <span>·</span>\n          <Date>\n            Last updated on {posts[posts.length - 1].frontmatter.date}\n          </Date>\n        </SeriesInform>\n\n        <Divider />\n      </Header>\n\n      <PostList postList={posts} />\n    </Layout>\n  )\n}\n\nexport default Series\n\nexport const pageQuery = graphql`\n  query BlogSeriesBySeriesName($series: String) {\n    posts: allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___date] }\n      filter: { frontmatter: { series: { eq: $series } } }\n    ) {\n      nodes {\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          update(formatString: \"MMM DD, YYYY\")\n          title\n          tags\n          series\n        }\n      }\n    }\n  }\n`\n"],"names":["IconImageWrapper","styled","img","withConfig","displayName","componentId","SeriesHeader","div","props","theme","colors","seriesBackground","span","text","tertiaryText","_ref","category","React","src","Link","to","_replace","PostListWrapper","PostWrapper","Date","p","Excerpt","secondaryText","postList","postCount","setPostCount","useState","handleMoreLoad","_throttle","document","documentElement","scrollHeight","scrollTop","clientHeight","length","setTimeout","useEffect","window","addEventListener","removeEventListener","slice","map","post","i","title","description","date","tags","series","frontmatter","excerpt","slug","fields","CategoryIcon","Title","size","TagList","tagList","Divider","mt","mb","TagListWrapper","TagLink","selected","selectedTagBackground","tagBackground","selectedTagText","tagText","hoveredSelectedTagBackground","hoveredTagBackground","spaceToDash","replace","count","tag","key","JSON","stringify","fieldValue","totalCount","Header","h1","SeriesInform","h3","bodyBackground","pageContext","data","seriesName","posts","nodes","Layout","SEO","url","siteUrl","PostList"],"sourceRoot":""}